using namespace std;
#include <bits/stdc++.h>
#define FASTIO                    \
ios_base::sync_with_stdio(false); \
cin.tie(NULL);                    \
cout.tie(NULL);                   
#define ll long long
#define debug(x) cout << #x << " = " << x << endl
vector<int> adj[100001];
int n,m;
int w[100001];
int q;
bool visited[100001];
int wtill[100001];
int dis[100001];
int par[100001];
int table[100001][100];
int maxn=log2(100001);
vector<char> is_prime(10001, true);
void seive(int n)
{
//vector<char> is_prime(n+1, true);
is_prime[0] = is_prime[1] = false;
for (int i = 2; i <= n; i++) {
    if (is_prime[i] && (long long)i * i <= n) {
        for (int j = i * i; j <= n; j += i)
            is_prime[j] = false;
    }
}
}
void dfs(int v,int p=-1)
{
  int val=w[v];
  if(p!=-1)
  wtill[v]=wtill[p];
  else
  wtill[v]=0; 
  if(is_prime[val]==true)
  wtill[v]+=val;
  visited[v]=1;
  if(p==-1)
  dis[v]=0;
  else
  dis[v]=dis[p]+1;
  par[v]=p;
  table[v][0]=p;
  //cout<<v<<" "<<p<<" "<<wtill[v]<<endl;
  //cout<<w[v]<<" "<<is_prime[val]<<endl;
  for(auto it:adj[v])
  {
    if(!visited[it])
    dfs(it,v);
  }
}
// o(n) time for lca
int lca(int a,int b)
{
   if(dis[b]<dis[a]) swap(a,b);
   int d=dis[b]-dis[a];
   while (d--)
   {
     b=par[b];
   }
   if(a==b)
   return a;
   while(a!=b)
   {
     a=par[a],b=par[b];
   }
   return a;
}
void init()
{
  dfs(1);
  for (int i = 1; i <=maxn; i++)
  {
    for (int j = 1; j <=n; j++)
    {
      if(table[j][i-1]!=-1)
      {
        int par=table[j][i-1];
        table[j][i]=table[par][i-1];
      }
    }
  }
}
int lcs_fast(int a,int b)
{
  if(dis[b]<dis[a])
  swap(a,b);
  int d=dis[b]-dis[a];
  while(d>0)
  {
    int base=log2(d);
    b=table[b][base];
    d-=(1<<base);
  }
  if(a==b)
  return a;
  for(int i=maxn;i>=0;i--)
  {
     if(table[a][i]!=-1&&table[b][i]!=-1&&table[a][i]!=table[b][i])
     a=table[a][i],b=table[b][i];
  }
  return par[a];
}
int ans(int a,int b)
{
  int la=lcs_fast(a,b);
  //cout<<la<<" "<<w[la]<<endl;
  int val1=wtill[a];
  int val2=wtill[b];
  if(is_prime[w[la]]==true)
  return val1+val2+w[la]-2*wtill[la];
  return val1+val2-2*wtill[la];
}
void solve()
{
cin>>n>>m;
for (int i = 1; i <=n; i++)
{
  cin>>w[i];
}
for (int i = 0; i < m; i++)
{
  int a,b;
  cin>>a>>b;
  adj[a].push_back(b);
  adj[b].push_back(a);
}
init();
cin>>q;
while (q--)
{
  int a,b;
  cin>>a>>b;
  cout<<ans(a,b)<<endl;
}
}
int main()
{
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  FASTIO
  long long int t = 1;
 // cin >> t;
 seive(10001);
  while (t--)
    solve();
  return 0;
}
